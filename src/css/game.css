@import url("main.css");
body {
    font-family: var(--font-main);
    color: var(--color-main);
    text-shadow: 0px 0px 22px var(--color-shadow);
}
.quest {
    text-align: center;
    font-size: 3rem;
    letter-spacing: 5px;
    color: var(--color-title);
    text-shadow: 0px 0px 22px var(--color-border);
}
.input, .lastGuess {
    position: absolute;
    top: 50%; left: 50%;
    transform: translate(-50%,-50%);
    font-family: var(--font-input);
    font-size: 9rem;
    width: 100%;
    text-align: center;
}
.lastGuess {
    margin-top: 80px;
    font-size: 3rem;
    opacity: 0.5;
}
.correct {
    font-size: 15rem;
    font-weight: 900;
    color: var(--color-main);
    animation: rainbow 1s infinite linear, zoomInZoomOut 1s infinite linear;
}
.output {
    position: absolute;
    bottom: 5%;
    left: 50%;
    transform: translateX(-50%);
    letter-spacing: 10px;
    opacity: 0;
    white-space: nowrap;
}
.outputApperance {
    animation: outputApperance 1s ease-in;
}
.progressCircle {
    position: absolute;
    right: 30px;
    bottom: 60px;
    height: 50px;
    width: 50px;
    border-radius: 50%;
    background: black linear-gradient(to right, transparent 50%, var(--color-progressCircle) 0);
    opacity: 1;
    --anim-play-state: paused;
    --anim: circleLoad 0.5s linear;
    opacity: 0;
}
.progressCircle::before {
    content: '';
    display: block;
    height: 100%;
    margin-left: 50%;
    transform-origin: left;
    border-radius: 0 100% 100% 0/50%;
    background-color: black;
    animation: var(--anim);
    animation-play-state: var(--anim-play-state);
}
.top-nav {
    display: flex;
    justify-content: center;
    gap: 20px;
    font-weight: bold;
    text-align: center;
    align-items: baseline;
    margin-top: -3px;
}
#time-seconds, #time-miliseconds {
    font-family: monospace;
    font-weight: bolder;
    font-size: 1.2rem;
}
.faint, .gamemode-info {
    color: var(--color-main);
    opacity: 0.75;
}
.gamemode-info {
    text-transform: uppercase;
    letter-spacing: 1px;
}
#hint {
    text-align: center;
    margin-top: -25px;
    margin-bottom: 25px;
    font-weight: bolder;
}
.dead {
    color: black;
    font-size: 15rem;
    font-weight: 900;
}
/*.gamemode-info {
    position: absolute;
    top: 1px;
    right: 35px;
    text-transform: uppercase;
    font-size: 3rem;
    letter-spacing: 5px;
    font-weight: bolder;
    opacity: 0.3;
}*/
@keyframes outputApperance {
    from {
        letter-spacing: 10px;
        opacity: 1;
    }
    to {
        letter-spacing: 50px;
        opacity: 0;
    }
}
@keyframes rainbow {
    from {
        filter: hue-rotate(0deg);
    }
    to {
        filter: hue-rotate(360deg);
    }
}
@keyframes zoomInZoomOut {
    0%, 100% {
        transform: translate(-50%, -50%) translateZ(-50px);
    }
    50% {
        transform: translate(-50%, -50%) translateZ(50px);
    }
}

@keyframes scrollText {
    from {
        transform: translateX(-50%);
    }
    to {
        transform: translateX(-62.75%);
    }
}
@keyframes scrollTextDead {
    from {
        transform: translateX(-50%);
    }
    to {
        transform: translateX(-66.8%);
    }
}
.scrollText { animation: scrollText 1s infinite linear; }
.scrollTextDead { animation: scrollTextDead 1.75s infinite linear; }

@keyframes circleLoad {
    0% {
        transform: rotate(calc(0 * 0.01turn));
        background-color: black;
    }
    49.9% {
        transform: rotate(calc(50 * 0.01turn));
        background-color: black;
    }
    50% {
        transform: rotate(calc(0 * 0.01turn));
        background-color: var(--color-progressCircle);
    }
    100% {
        transform: rotate(calc(50 * 0.01turn));
        background-color: var(--color-progressCircle);
    }
}

@keyframes correctEffect {
    0%, 100% {
        transform: translate(-50%, -50%) translateZ(-50px);
        color: var(--color-main);
    }
    50% {
        transform: translate(-50%, -50%) translateZ(50px);
        color: green;
    }
}
.correctEffect {
    animation: correctEffect 0.75s linear;
}